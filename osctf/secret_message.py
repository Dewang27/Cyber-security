from Crypto.Util.number import getPrime, bytes_to_long, long_to_bytes
import gmpy2
'''flag = bytes_to_long(b"REDACTED")
p = getPrime(512)
q = getPrime(512)
n = p*q
e = 3

ciphertext = pow(flag, e, n)

print("n: ", n)
print("e: ", e)
print("ciphertext: ", ciphertext)'''

e=3
ct=123455882152544968263105106204728561055927061837559618140477097078038573915018542652304779417958037315601542697001430243903815208295768006065618427997903855304186888710867473025125
n=95529209895456302225704906479347847909957423713146975001566374739455122191404873517846348720717334832208112563199994182911677708320666162110219260456995238587348694937990770918797369279309985690765014929994818701603418084246649965352663500490541743609682236183632053755116058982739236349050530235419666436143

# Compute the eth root of the ciphertext
root, exact = gmpy2.iroot(ct, e)

# Convert it to bytes
pt = long_to_bytes(int(root))
print(pt.decode('utf-8'))
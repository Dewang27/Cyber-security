from Crypto.Util.number import long_to_bytes,inverse

n=110581795715958566206600392161360212579669637391437097703685154237017351570464767725324182051199901920318211290404777259728923614917211291562555864753005179326101890427669819834642007924406862482343614488768256951616086287044725034412802176312273081322195866046098595306261781788276570920467840172004530873767

e=1

ct= 44981230718212183604274785925793145442655465025264554046028251311164494127485

p= 110581795715958566206600392161360212579669637391437097703685154237017351570464767725324182051199901920318211290404777259728923614917211291562555864753005179326101890427669819834642007924406862482343614488768256951616086287044725034412802176312273081322195866046098595306261781788276570920467840172004530873767

phi= (p-1)*(p)

d=1  #cause in the program after generating p and q, d is calculated as inverse of e mod phi, and phi is (p-1)*(q-1) and here p=q, so phi=(p-1)*(p) making d=1

pt= pow(ct,d,n)
print(long_to_bytes(pt))

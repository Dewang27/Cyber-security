
from Crypto.Util.number import long_to_bytes,bytes_to_long

ct =['31c2fbff33dec7b070cf737c57393c8ab9982ae51b87b64d001a00aa74264254159e81e13b82ac5bc4d7f38aead06fabbf5b21ee668700a44673fac75bc09b084e79513ada3d11b248ae5fca74ba0c2f807e73052f3090ee61a3bd226e14f4b0544f952449623b8cbd01cc42ff5462c4904d0c28af6dbce73596de45279461fd', '06c12db6573d6f6e1b2ecdaff825c6369da39fa7568f63cb6943070af8a3643e603493e23917833261f9c247d504455f3ef0e637d5f18ad2eeb5293ec0bb622bb171802a8d994b27a274c7dc417e247672b27bffb3dba25ea8dabb7379a58dd41704b605baf123046a88b4c5d5c238a6fae10007c28e482f84568c20f39d8bd7', '5ec536c327efe1a8432e4d36b76227ccebb15d73a102689ba24f7aadbd99298b17a63ee0396c4c489201e10e224f493364b8d999258ad507039520dfddca559c4c26eddc331fc3cf3dda65695aa5c8316423b57f35f641a7154771cd6735f1e8e6b1b212542bc6c21f5323e127447e07ef2cd5584f6a41eeef6b6e1c652b385e', '6488452ed101d5261f29924c5f5a6d3c5ecde3ea7e7ed235aa9c5f62b95dcadaaf2918a9085477d01536478fa747e2ab953b5ae4b56d1e8c074748e98db8fe2672c99720dcd0c968e31ceab02a532715c7f11b8c25384c406202b654d9ccaedcc0a2b017cee63285ae7d22a0c8a0da527e175b1dd042031eb6f9c1ef7dfd5e04']
ct= [bytes_to_long(bytes.fromhex(x)) for x in ct]
#print(ct)

ct= [34943824362462051475439609860986286625097917254769992684531612871294614856690993625422102239300455875400180940827337108973553340116006700813962845108306775061807771798677331776776087624920752330960492952788171820918812097482324476781977911089173788391141053829326494066691149133321712271259020648897928520189, 4743244068365552420209140803417963869291910728014408305705098832800979826546295528784228614201258773962840198361153425398446792423254816324235997367567266140787521099128953217102321544379954122320056718121038848177979736749293956797577132473968287657031524349527842844658154543429201866908527253115274890199, 66550014799561365083091783719623771746918277985501922053790072464599537269932688887182935272628399936416172749363313948057068010977413380553162126517169978713906334811138977160539541748553518289758709821616339296366724858633948736343662069276955729617957504763092417726031485478470662075093853322498584295518, 70596185817715684246133217569983212242450092071904292859814963870489673624668023857827984832687652148472843835894669753584546744978963003957696231100467564470610827538968693796124243067457119696785576517406547775014560413988293032573068710556751028775308757356169293243574865040230114664683209980437134663172]

e = [114194, 130478, 122694, 79874]

from math import gcd

modulus_list = [
    143786356117385195355522728814418684024129402954309769186869633376407480449846714776247533950484109173163811708549269029920405450237443197994941951104068001708682945191370596050916441792714228818475059839352105948003874426539429621408867171203559281132589926504992702401428910240117807627890055235377744541913,
    73988726804584255779346831019194873108586184186524793132656027600961771331094234332693404730437468912329694216269372797532334390363774803642809945268154324370355113538927414351037561899998734391507272602074924837440885467211134022878597523920836541794820777951492188067045604789153534513271406458984968338509,
    95666403279611361071535593067846981517930129087906362381453835849857496766736720885263927273295086034390557353492037703154353541274448884795437287235560639118986397838850340017834752502157881329960725771502503917735194236743345777337851076649842634506339513864285786698870866229339372558162315435127197444193, 
    119235191922699211973494433973985286182951917872084464216722572875998345005104112625024274855529546680909781406076412741844254205002739352725207590519921992295941563460138887173402493503653397592300336588721082590464192875253265214253650991510709511154297580284525736720396804660126786258245028204861220690641
]

# Compute GCDs
gcd_12 = gcd(modulus_list[0], modulus_list[1])
gcd_13 = gcd(modulus_list[0], modulus_list[2])
gcd_14 = gcd(modulus_list[0], modulus_list[3])
gcd_23 = gcd(modulus_list[1], modulus_list[2])
gcd_24 = gcd(modulus_list[1], modulus_list[3])
gcd_34 = gcd(modulus_list[2], modulus_list[3])

common_primes = [
    gcd_12, gcd_13, gcd_14, gcd_23, gcd_24, gcd_34
]

#print("GCD Results:")
#print(f"GCD(N1, N2): {gcd_12}")
#print(f"GCD(N1, N3): {gcd_13}")
#print(f"GCD(N1, N4): {gcd_14}")
#print(f"GCD(N2, N3): {gcd_23}")
#print(f"GCD(N2, N4): {gcd_24}")
#print(f"GCD(N3, N4): {gcd_34}")

p = gcd_14
q1 = modulus_list[0] // p
q4 = modulus_list[3] // p

#print(f"Factors of N1: p = {p}, q1 = {q1}")
#print(f"Factors of N4: p = {p}, q4 = {q4}")

if p*q1 == modulus_list[0] and p*q4 == modulus_list[3]:
    print("Factorization successful!")

e1= e[0]
e4= e[3]

phi_N1 = (p - 1) * (q1 - 1)
phi_N4 = (p - 1) * (q4 - 1)

d1=pow(e1,-1,phi_N1)
d4=pow(e4,-1,phi_N4)

m1 = pow(ct[0], d1, modulus_list[0])
m4 = pow(ct[3], d4, modulus_list[3])

decrypted_message1 = long_to_bytes(m1)
decrypted_message4 = long_to_bytes(m4)

print(f"Decrypted message for N1: {decrypted_message1}")
print(f"Decrypted message for N4: {decrypted_message4}")